@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Models.TodoItems
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">
    <div class="checkbox">
        <label>
            <input type="checkbox" id="hidedonecheckbox" />Hide completed
        </label>
    </div>
    <div class="checkbox">
        @if (Model.SortByRankNotImportance)
        {
            <label>
                <input type="checkbox" id="sortbyrank" checked />
                Sort by rank
            </label>
        }
        else {
            <label>
                <input type="checkbox" id="sortbyrank" />
                Sort by rank
            </label>
        }
    </div>

    <ul class="list-group">
        @Html.HiddenFor(m => m.SortByRankNotImportance)

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>

        @{
            IOrderedEnumerable<TodoItemSummaryViewmodel> orderedList;
            if (Model.SortByRankNotImportance)
            {
                orderedList = Model.Items.OrderBy(m => m.Rank);
            }
            else
            {
                orderedList = Model.Items.OrderBy(m => m.Importance);
            }
        }

        @foreach (var item in orderedList)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }
            string rowName = "outstanding";
            @if (item.IsDone)
            {
                rowName = "isdone";
            }


            <li class="list-group-item @contextualClass" name=@rowName>

                <div class="row">
                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName

                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />

                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>

<script>
    const hideDoneCheckbox = document.getElementById('hidedonecheckbox')
    const sortByRankCheckbox = document.getElementById('sortbyrank')
    const collection = document.getElementsByName("isdone")

    hideDoneCheckbox.addEventListener('change', (event) => {
        const checked = event.target.checked
        const setTo = checked ? "none" : "block";
        for (let i = 0; i < collection.length; i++) {
            collection[i].style.display = setTo;
        }
    })

    sortByRankCheckbox.addEventListener('change', (event) => {
        const rankChecked = event.target.checked
        var  url = "Detail?todoListid=@Model.TodoListId&sortByRank="+rankChecked
        loadUrl(url)
    })

    function loadUrl(newLocation) {
        window.location = newLocation;
        return false;
    }
</script>